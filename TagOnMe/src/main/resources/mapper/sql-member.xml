<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ds.mapper.MemberMapper">
	<resultMap type="com.ds.domain.MemberVO" id="memberVO">
		<result property="userid" column="USERID" />
		<result property="userpw" column="USERPW" />
		<result property="nickname" column="NICKNAME" />
		<result property="regdate" column="REGDATE" />
		<result property="email" column="EMAIL" />
		<result property="introduce" column="INTRODUCE" />
	</resultMap>

	<resultMap type="com.ds.domain.TagVO" id="TagVO">
		<result property="uno" column="uno" />
		<result property="tno" column="tno" />
		<result property="tags" column="tags" />
		<result property="leader" column="leader" />
	</resultMap>

	<select id="read" resultMap="memberVO">
		<!-- 회원정보를 읽 -->
		<![CDATA[
			select * from tom_member_info where userid = #{userid}
		]]>
	</select>

	<insert id="insert" parameterType="com.ds.domain.MemberVO">
		<!-- 회원가입 : 회원정보 넣음 -->
		<selectKey keyProperty="uno" resultType="Integer" order="BEFORE">
			select SEQ_TOM_MEMBER_INFO.nextval from dual
		</selectKey>
		INSERT INTO tom_member_info (uno, userid, userpw, nickname,regdate, email, introduce)
		VALUES(#{uno}, #{userid}, #{userpw}, #{nickname},sysdate, #{email}, #{introduce})
	</insert>

<!-- 	<insert id="insertTags" parameterType="com.ds.domain.TagVO">
		회원가입 : 태그s
		<selectKey keyProperty="tno" resultType="Integer" order="BEFORE">
			select SEQ_TOM_TAGS.nextval from dual
		</selectKey>
		insert INTO tom_tags (tno,tags) VALUES(#{tno},#{tags})
	</insert>
 -->
	<insert id="insertTagUser" parameterType="com.ds.domain.TagVO">
<!-- 		회원가입 : 태그유저 -->
		<selectKey keyProperty="tuno" resultType="Integer" order="BEFORE">
			select SEQ_TOM_MEMBER_INFO.nextval from dual
		</selectKey>
		insert INTO tom_tag_user (tuno,uno,tno,leader)
		VALUES(#{tuno}, #{uno},#{tno}, default)
	</insert>


	<!-- <insert id="insert" parameterType="com.ds.domain.MemberVO"> -->
	<!-- 회원가입 -->
	<!-- <selectKey keyProperty="tno" resultType="int" order="AFTER"> -->

	<!-- INSERT ALL -->
	<!-- INTO tom_member_info (uno, userid, userpw, nickname,regdate, email, 
		introduce) VALUES(SEQ_TOM_MEMBER_INFO.nextval, #{userid}, #{userpw}, #{nickname},#{sysdate}, 
		#{email}, #{introduce}) -->
	<!-- select * from tom_member_info</selectKey> -->
	<!-- </insert> -->

	<!-- INTO tom_tag_user * VALUES(SEQ_TOM_TAG_USER.nextval, SEQ_TOM_MEMBER_INFO.nextval,SEQ_TOM_TAGS.nextval, 
		default) -->
	<!-- INTO tom_tags * VALUES(SEQ_TOM_TAGS.nextval,#{tags}) -->


	<!-- insert into tom_member_info(uno, userid, userpw, nickname, email, introduce) 
		values (seq_tom_member_info.nextval,#{userid}, #{userpw}, #{nickname}, #{email}, 
		#{introduce}) -->
	<!-- <selectKey keyProperty="tuno" resultType="int" order="BEFORE"> -->
	<!-- select SEQ_TOM_TAG_USER.nextval from dual </selectKey> -->
	<!-- insert into tom_tag_user(tuno,uno,tno,leader) values(#{tuno},#{uno},#{tno},default 
		) -->
	<!-- </insert> -->


	<!-- 아이디 중복체크 -->
	<select id="idChk" resultType="int">
		select count(*) from
		tom_member_info
		where userid = #{userid, jdbcType=VARCHAR}

	</select>

	<select id="login" parameterType="com.ds.domain.MemberVO"
		resultMap="memberVO">
		<!-- 로그인 -->
	<![CDATA[
			select * from tom_member_info where userid = #{userid} and userpw = #{userpw}
		]]>
	</select>

	<update id="updatePw" parameterType="com.ds.domain.MemberVO">
		<!-- 비밀번호만 수정 -->
		UPDATE tom_member_info
		SET userpw=#{userpw}
		WHERE userid=#{userid}
	</update>
	
	<select id="readTag" resultType="com.ds.domain.TagVO" resultMap="TagVO">
	<!-- 원래 DB 들어있는 tag를 읽어옴 -->
		select * from tom_tags
	</select>
	
	<!-- 프로필 영역입니다. -->
	<!-- start profile -->
	<resultMap type="com.ds.domain.MemberVO" id="memberMap">
		<id property="uno" column="uno"/>
		<result property="userid" column="userid"/>
		<result property="userpw" column="userpw"/>
		<result property="nickname" column="nickname"/>
		<result property="regdate" column="regdate"/> 
		<result property="enabled" column="enabled"/>
		<result property="email" column="email"/>
		<result property="introduce" column="introduce"/>
		<collection property="tagList" resultMap="tagMap"/>
	</resultMap>
	<resultMap type="com.ds.domain.TagVO" id="tagMap">
		<result property="uno" column="uno"/>
		<result property="tno" column="tno"/>
		<result property="tags" column="tags"/>
		<result property="leader" column="leader"/>
	</resultMap>
	<select id="readAllMember" resultMap="memberMap">
		select m.uno, userid, userpw, nickname, regdate, email, introduce, tags, a.tno, leader
		from tom_member_info m left outer join tom_tag_user a 
		on m.uno = a.uno
		left outer join tom_tags t
		on a.tno = t.tno
		where a.uno=#{uno} and enabled=1
	</select>
	<select id="readBoardWriteMember" resultMap="memberMap">
		select m.uno, userid, userpw, nickname, regdate, email, introduce, tags, a.tno
		from tom_member_info m left outer join tom_tag_user a
		on m.uno = a.uno
		left outer join tom_tags t
		on a.tno = t.tno
		where a.uno = (select uno from tom_member_info where userid=#{userid}) and enabled=1
	</select>
	<!-- 나중에 uno의 값을 1에서 #{uno}로 바꾸어야한다. 세션 사용법 배우기-->
	<!-- end profile -->
	

	
	<!-- start update profile -->
	<update id="editProfile" parameterType="com.ds.domain.MemberVO">
		<![CDATA[
			UPDATE tom_member_info 
			SET nickname = #{nickname}, introduce = #{introduce}
			WHERE uno = #{uno}
		]]>
	</update>
	<!-- end update profile -->
	
	<!-- start old insert userTag -->
	<insert id="oldUserTag" parameterType="com.ds.domain.TagVO">
		<selectKey keyProperty="tuno" resultType="int" order="BEFORE">
			select SEQ_TOM_TAG_USER.nextval from dual
		</selectKey>
		insert into tom_tag_user(tuno,uno,tno,leader)
		values(#{tuno},#{uno},#{tno},default )
	</insert>
	<!-- end old insert userTag -->
	
	<!-- start insert new tag -->
	<insert id="newTag" parameterType="com.ds.domain.TagVO">
		<selectKey keyProperty="tno" resultType="Integer" order="BEFORE">
			select SEQ_TOM_TAGS.nextval from dual
		</selectKey>
		insert into tom_tags(tno, tags)
		values(#{tno}, #{tags})
	</insert>
	<!-- end insert new tag -->
	<!-- start new insert userTag -->
	<insert id="newUserTag" parameterType="com.ds.domain.TagVO">
		<selectKey keyProperty="tuno" resultType="Integer" order="BEFORE">
			select SEQ_TOM_TAG_USER.nextval from dual
		</selectKey>
		insert into tom_tag_user(tuno,uno,tno,leader)
		values(#{tuno},#{uno},#{tno},default )
	</insert>	
	<!-- end new insert userTag -->
	
	<!-- start delete userTag -->
	<delete id="delUserTag" parameterType="com.ds.domain.TagVO">
		delete from tom_tag_user
		where tno = #{tno} and uno = #{uno}
	</delete>	
	<!-- end delete userTag -->
	
	<!-- start search tag -->
	<select id="searchTag" resultType="com.ds.domain.TagVO"><!-- 전체 태그 중 내 태그만 제외한 나머지 -->
		select * from tom_tags t where t.tno not in (select u.tno from tom_tag_user u where u.uno = #{uno})
	</select>
	<!-- end search tag -->
	
	<!-- start leader -->
	<update id="leaderTag" parameterType="com.ds.domain.TagVO">
		update tom_tag_user set
			<choose>
				<when test="leader == '1'">leader = '0'</when>
			</choose>
			<choose>
				<when test="leader == '0'">leader = '1'</when>
			</choose>

			where uno = #{uno} and tno= #{tno}
	</update>
	<!-- end leader -->
	
	<!-- start get new tag -->
	<select id="getNewTag" resultType="com.ds.domain.TagVO">
		select t.tno, tags, leader from tom_tags t, tom_tag_user u 
		where t.tno = (select max(tno) from tom_tag_user where uno = #{uno}) 
		and u.uno = #{uno} and t.tno = u.tno
	</select> 
	<!-- end get new tag -->
	
	<!-- 태그 중복 체크 -->
	<select id="tagCheck" resultType="com.ds.domain.TagVO" parameterType="com.ds.domain.TagVO">
		select * from tom_tags where tags = #{tags}
	</select>
</mapper>